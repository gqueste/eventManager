/*
 * Created on 20 oct. 2014 ( Time 09:24:20 )
 * Generated by Telosys Tools Generator ( version 2.1.0 )
 */

package com.eventManager.persistence.services.jpa;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceException;
import javax.persistence.Query;

import com.eventManager.bean.jpa.UsersEntity;
import com.eventManager.persistence.commons.jpa.GenericJpaService;
import com.eventManager.persistence.commons.jpa.JpaOperation;
import com.eventManager.persistence.services.UsersPersistence;

/**
 * JPA implementation for basic persistence operations ( entity "Users" )
 * 
 * @author Telosys Tools Generator
 *
 */
public class UsersPersistenceJPA extends GenericJpaService<UsersEntity, Integer> implements UsersPersistence {

	/**
	 * Constructor
	 */
	public UsersPersistenceJPA() {
		super(UsersEntity.class);
	}

	@Override
	public UsersEntity load( Integer userId ) {
		return super.load( userId );
	}

	@Override
	public boolean delete( Integer userId ) {
		return super.delete( userId );
	}

	@Override
	public boolean delete(UsersEntity entity) {
		if ( entity != null ) {
			return super.delete( entity.getUserId() );
		}
		return false ;
	}

	@Override
	public long countAll() {
		// JPA operation definition 
		JpaOperation operation = new JpaOperation() {
			@Override
			public Object exectue(EntityManager em) throws PersistenceException {
				Query query = em.createNamedQuery("UsersEntity.countAll");
				return query.getSingleResult() ;
			}
		} ;
		// JPA operation execution 
		return (Long) execute(operation);
	}
	
	/**
	 * Insere un user et retourne son ID
	 * @param user UserEntity, l'user à ajouter
	 * @return ID de l'user tout juste inséré, -1 si pas inséré
	 */
	public int insertAndGetID(UsersEntity user) {
		int ret = -1;
		Map<String,Object> critere = new HashMap<String, Object>();
		critere.put("mail", user.getMail());
		ArrayList<UsersEntity> listeUsers = (ArrayList<UsersEntity>) this.search(critere);
		if(listeUsers.size() == 0) {
			this.insert(user);
			listeUsers = (ArrayList<UsersEntity>) this.search(critere);
			if(listeUsers.size() == 1) {
				UsersEntity userFound = listeUsers.get(0);
				ret = userFound.getUserId();
			}		
		}		
		return ret;
	}
}
